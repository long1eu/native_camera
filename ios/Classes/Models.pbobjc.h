// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: models.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30004
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30004 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class CameraAspectRatio;
@class Range;
@class Size_Class;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum CameraInfo_LensFacing

typedef GPB_ENUM(CameraInfo_LensFacing) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  CameraInfo_LensFacing_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  CameraInfo_LensFacing_Front = 0,
  CameraInfo_LensFacing_Back = 1,
  CameraInfo_LensFacing_External = 2,
};

GPBEnumDescriptor *CameraInfo_LensFacing_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL CameraInfo_LensFacing_IsValidValue(int32_t value);

#pragma mark - Enum CameraState_Flash

typedef GPB_ENUM(CameraState_Flash) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  CameraState_Flash_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  CameraState_Flash_FlashOn = 0,
  CameraState_Flash_FlashAuto = 1,
  CameraState_Flash_FlashOff = 2,
  CameraState_Flash_FlashTorch = 3,

  /** Available only on Android */
  CameraState_Flash_FlashRedEye = 4,
};

GPBEnumDescriptor *CameraState_Flash_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL CameraState_Flash_IsValidValue(int32_t value);

#pragma mark - Enum CameraState_Orientation

typedef GPB_ENUM(CameraState_Orientation) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  CameraState_Orientation_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  CameraState_Orientation_OrientationAuto = 0,
  CameraState_Orientation_OrientationLeft = 1,
  CameraState_Orientation_OrientationRight = 2,
  CameraState_Orientation_OrientationUp = 3,
  CameraState_Orientation_OrientationDown = 4,
};

GPBEnumDescriptor *CameraState_Orientation_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL CameraState_Orientation_IsValidValue(int32_t value);

#pragma mark - Enum CameraState_VideoCodec

/** Only used on iOS */
typedef GPB_ENUM(CameraState_VideoCodec) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  CameraState_VideoCodec_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  CameraState_VideoCodec_VideoCodecAppleProRes422 = 0,
  CameraState_VideoCodec_VideoCodecAppleProRes4444 = 1,
  CameraState_VideoCodec_VideoCodecH264 = 2,
  CameraState_VideoCodec_VideoCodecHvec = 3,
  CameraState_VideoCodec_VideoCodecJpeg = 4,
};

GPBEnumDescriptor *CameraState_VideoCodec_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL CameraState_VideoCodec_IsValidValue(int32_t value);

#pragma mark - Enum CameraState_VideoQuality

typedef GPB_ENUM(CameraState_VideoQuality) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  CameraState_VideoQuality_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  CameraState_VideoQuality_VideoQuality2160P = 0,
  CameraState_VideoQuality_VideoQuality1080P = 1,
  CameraState_VideoQuality_VideoQuality720P = 2,
  CameraState_VideoQuality_VideoQuality480P = 3,
  CameraState_VideoQuality_VideoQuality43 = 4,

  /** Available only on iOS */
  CameraState_VideoQuality_VideoQuality288P = 5,
};

GPBEnumDescriptor *CameraState_VideoQuality_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL CameraState_VideoQuality_IsValidValue(int32_t value);

#pragma mark - Enum CameraState_VideoStabilization

/** Only used on iOS */
typedef GPB_ENUM(CameraState_VideoStabilization) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  CameraState_VideoStabilization_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  CameraState_VideoStabilization_VideoStabilizationAuto = 0,
  CameraState_VideoStabilization_VideoStabilizationStandard = 1,
  CameraState_VideoStabilization_VideoStabilizationOff = 2,
  CameraState_VideoStabilization_VideoStabilizationCinematic = 3,
};

GPBEnumDescriptor *CameraState_VideoStabilization_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL CameraState_VideoStabilization_IsValidValue(int32_t value);

#pragma mark - Enum CameraState_WhiteBalance

typedef GPB_ENUM(CameraState_WhiteBalance) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  CameraState_WhiteBalance_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  CameraState_WhiteBalance_WhiteBalanceAuto = 0,
  CameraState_WhiteBalance_WhiteBalanceCloudy = 1,
  CameraState_WhiteBalance_WhiteBalanceFluorescent = 2,
  CameraState_WhiteBalance_WhiteBalanceIncandescent = 3,
  CameraState_WhiteBalance_WhiteBalanceShadow = 4,
  CameraState_WhiteBalance_WhiteBalanceSunny = 5,
};

GPBEnumDescriptor *CameraState_WhiteBalance_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL CameraState_WhiteBalance_IsValidValue(int32_t value);

#pragma mark - ModelsRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
GPB_FINAL @interface ModelsRoot : GPBRootObject
@end

#pragma mark - CameraInfo

typedef GPB_ENUM(CameraInfo_FieldNumber) {
  CameraInfo_FieldNumber_Id_p = 1,
  CameraInfo_FieldNumber_Facing = 2,
};

GPB_FINAL @interface CameraInfo : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *id_p;

@property(nonatomic, readwrite) CameraInfo_LensFacing facing;

@end

/**
 * Fetches the raw value of a @c CameraInfo's @c facing property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t CameraInfo_Facing_RawValue(CameraInfo *message);
/**
 * Sets the raw value of an @c CameraInfo's @c facing property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetCameraInfo_Facing_RawValue(CameraInfo *message, int32_t value);

#pragma mark - CameraState

typedef GPB_ENUM(CameraState_FieldNumber) {
  CameraState_FieldNumber_Zoom = 1,
  CameraState_FieldNumber_MaxZoom = 2,
  CameraState_FieldNumber_Ratio = 3,
  CameraState_FieldNumber_FocusDepth = 4,
  CameraState_FieldNumber_CameraId = 5,
  CameraState_FieldNumber_AutoFocus = 6,
  CameraState_FieldNumber_Flash = 7,
  CameraState_FieldNumber_Exposure = 8,
  CameraState_FieldNumber_WhiteBalance = 9,
  CameraState_FieldNumber_PlaySoundOnCapture = 10,
  CameraState_FieldNumber_UseCamera2 = 11,
  CameraState_FieldNumber_Orientation = 12,
  CameraState_FieldNumber_PreviewSize = 13,
  CameraState_FieldNumber_SupportedRatioArray = 14,
  CameraState_FieldNumber_SupportedPreviewFpsArray = 15,
};

GPB_FINAL @interface CameraState : GPBMessage

@property(nonatomic, readwrite) float zoom;

/** Only used on iOS */
@property(nonatomic, readwrite) float maxZoom;

@property(nonatomic, readwrite, strong, null_resettable) CameraAspectRatio *ratio;
/** Test to see if @c ratio has been set. */
@property(nonatomic, readwrite) BOOL hasRatio;

@property(nonatomic, readwrite) float focusDepth;

@property(nonatomic, readwrite, copy, null_resettable) NSString *cameraId;

@property(nonatomic, readwrite) BOOL autoFocus;

@property(nonatomic, readwrite) CameraState_Flash flash;

@property(nonatomic, readwrite) float exposure;

@property(nonatomic, readwrite) CameraState_WhiteBalance whiteBalance;

@property(nonatomic, readwrite) BOOL playSoundOnCapture;

/** Only used on Android > 21 */
@property(nonatomic, readwrite) BOOL useCamera2;

/** read only */
@property(nonatomic, readwrite) CameraState_Orientation orientation;

@property(nonatomic, readwrite, strong, null_resettable) Size_Class *previewSize;
/** Test to see if @c previewSize has been set. */
@property(nonatomic, readwrite) BOOL hasPreviewSize;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<CameraAspectRatio*> *supportedRatioArray;
/** The number of items in @c supportedRatioArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger supportedRatioArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<Range*> *supportedPreviewFpsArray;
/** The number of items in @c supportedPreviewFpsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger supportedPreviewFpsArray_Count;

@end

/**
 * Fetches the raw value of a @c CameraState's @c flash property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t CameraState_Flash_RawValue(CameraState *message);
/**
 * Sets the raw value of an @c CameraState's @c flash property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetCameraState_Flash_RawValue(CameraState *message, int32_t value);

/**
 * Fetches the raw value of a @c CameraState's @c whiteBalance property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t CameraState_WhiteBalance_RawValue(CameraState *message);
/**
 * Sets the raw value of an @c CameraState's @c whiteBalance property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetCameraState_WhiteBalance_RawValue(CameraState *message, int32_t value);

/**
 * Fetches the raw value of a @c CameraState's @c orientation property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t CameraState_Orientation_RawValue(CameraState *message);
/**
 * Sets the raw value of an @c CameraState's @c orientation property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetCameraState_Orientation_RawValue(CameraState *message, int32_t value);

#pragma mark - CameraAspectRatio

typedef GPB_ENUM(CameraAspectRatio_FieldNumber) {
  CameraAspectRatio_FieldNumber_X = 1,
  CameraAspectRatio_FieldNumber_Y = 2,
};

GPB_FINAL @interface CameraAspectRatio : GPBMessage

@property(nonatomic, readwrite) int32_t x;

@property(nonatomic, readwrite) int32_t y;

@end

#pragma mark - Size_Class

typedef GPB_ENUM(Size_Class_FieldNumber) {
  Size_Class_FieldNumber_Width = 1,
  Size_Class_FieldNumber_Height = 2,
};

GPB_FINAL @interface Size_Class : GPBMessage

@property(nonatomic, readwrite) int32_t width;

@property(nonatomic, readwrite) int32_t height;

@end

#pragma mark - Range

typedef GPB_ENUM(Range_FieldNumber) {
  Range_FieldNumber_Min = 1,
  Range_FieldNumber_Max = 2,
};

GPB_FINAL @interface Range : GPBMessage

@property(nonatomic, readwrite) int32_t min;

@property(nonatomic, readwrite) int32_t max;

@end

#pragma mark - Point_Class

typedef GPB_ENUM(Point_Class_FieldNumber) {
  Point_Class_FieldNumber_X = 1,
  Point_Class_FieldNumber_Y = 2,
};

GPB_FINAL @interface Point_Class : GPBMessage

@property(nonatomic, readwrite) float x;

@property(nonatomic, readwrite) float y;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)

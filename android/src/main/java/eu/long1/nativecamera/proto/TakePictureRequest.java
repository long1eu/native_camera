// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: native_camera.proto

package eu.long1.nativecamera.proto;

/**
 * Protobuf type {@code TakePictureRequest}
 */
public  final class TakePictureRequest extends
    com.google.protobuf.GeneratedMessageLite<
        TakePictureRequest, TakePictureRequest.Builder> implements
    // @@protoc_insertion_point(message_implements:TakePictureRequest)
    TakePictureRequestOrBuilder {
  private TakePictureRequest() {
    path_ = "";
  }
  public static final int PATH_FIELD_NUMBER = 1;
  private java.lang.String path_;
  /**
   * <code>string path = 1;</code>
   * @return The path.
   */
  @java.lang.Override
  public java.lang.String getPath() {
    return path_;
  }
  /**
   * <code>string path = 1;</code>
   * @return The bytes for path.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getPathBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(path_);
  }
  /**
   * <code>string path = 1;</code>
   * @param value The path to set.
   */
  private void setPath(
      java.lang.String value) {
    value.getClass();
  
    path_ = value;
  }
  /**
   * <code>string path = 1;</code>
   */
  private void clearPath() {
    
    path_ = getDefaultInstance().getPath();
  }
  /**
   * <code>string path = 1;</code>
   * @param value The bytes for path to set.
   */
  private void setPathBytes(
      com.google.protobuf.ByteString value) {
    checkByteStringIsUtf8(value);
    path_ = value.toStringUtf8();
    
  }

  public static final int EXIF_FIELD_NUMBER = 2;
  private static final class ExifDefaultEntryHolder {
    static final com.google.protobuf.MapEntryLite<
        java.lang.String, java.lang.String> defaultEntry =
            com.google.protobuf.MapEntryLite
            .<java.lang.String, java.lang.String>newDefaultInstance(
                com.google.protobuf.WireFormat.FieldType.STRING,
                "",
                com.google.protobuf.WireFormat.FieldType.STRING,
                "");
  }
  private com.google.protobuf.MapFieldLite<
      java.lang.String, java.lang.String> exif_ =
          com.google.protobuf.MapFieldLite.emptyMapField();
  private com.google.protobuf.MapFieldLite<java.lang.String, java.lang.String>
  internalGetExif() {
    return exif_;
  }
  private com.google.protobuf.MapFieldLite<java.lang.String, java.lang.String>
  internalGetMutableExif() {
    if (!exif_.isMutable()) {
      exif_ = exif_.mutableCopy();
    }
    return exif_;
  }
  @java.lang.Override

  public int getExifCount() {
    return internalGetExif().size();
  }
  /**
   * <code>map&lt;string, string&gt; exif = 2;</code>
   */
  @java.lang.Override

  public boolean containsExif(
      java.lang.String key) {
    key.getClass();
    return internalGetExif().containsKey(key);
  }
  /**
   * Use {@link #getExifMap()} instead.
   */
  @java.lang.Override
  @java.lang.Deprecated
  public java.util.Map<java.lang.String, java.lang.String> getExif() {
    return getExifMap();
  }
  /**
   * <code>map&lt;string, string&gt; exif = 2;</code>
   */
  @java.lang.Override

  public java.util.Map<java.lang.String, java.lang.String> getExifMap() {
    return java.util.Collections.unmodifiableMap(
        internalGetExif());
  }
  /**
   * <code>map&lt;string, string&gt; exif = 2;</code>
   */
  @java.lang.Override

  public java.lang.String getExifOrDefault(
      java.lang.String key,
      java.lang.String defaultValue) {
    key.getClass();
    java.util.Map<java.lang.String, java.lang.String> map =
        internalGetExif();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <code>map&lt;string, string&gt; exif = 2;</code>
   */
  @java.lang.Override

  public java.lang.String getExifOrThrow(
      java.lang.String key) {
    key.getClass();
    java.util.Map<java.lang.String, java.lang.String> map =
        internalGetExif();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }
  /**
   * <code>map&lt;string, string&gt; exif = 2;</code>
   */
  private java.util.Map<java.lang.String, java.lang.String>
  getMutableExifMap() {
    return internalGetMutableExif();
  }

  public static final int WRITE_EXIF_FIELD_NUMBER = 3;
  private boolean writeExif_;
  /**
   * <pre>
   * Should write exif to file
   * </pre>
   *
   * <code>bool write_exif = 3;</code>
   * @return The writeExif.
   */
  @java.lang.Override
  public boolean getWriteExif() {
    return writeExif_;
  }
  /**
   * <pre>
   * Should write exif to file
   * </pre>
   *
   * <code>bool write_exif = 3;</code>
   * @param value The writeExif to set.
   */
  private void setWriteExif(boolean value) {
    
    writeExif_ = value;
  }
  /**
   * <pre>
   * Should write exif to file
   * </pre>
   *
   * <code>bool write_exif = 3;</code>
   */
  private void clearWriteExif() {
    
    writeExif_ = false;
  }

  public static final int QUALITY_FIELD_NUMBER = 4;
  private double quality_;
  /**
   * <pre>
   * Value between 0-1
   * </pre>
   *
   * <code>double quality = 4;</code>
   * @return The quality.
   */
  @java.lang.Override
  public double getQuality() {
    return quality_;
  }
  /**
   * <pre>
   * Value between 0-1
   * </pre>
   *
   * <code>double quality = 4;</code>
   * @param value The quality to set.
   */
  private void setQuality(double value) {
    
    quality_ = value;
  }
  /**
   * <pre>
   * Value between 0-1
   * </pre>
   *
   * <code>double quality = 4;</code>
   */
  private void clearQuality() {
    
    quality_ = 0D;
  }

  public static final int PAUSE_AFTER_CAPTURE_FIELD_NUMBER = 5;
  private boolean pauseAfterCapture_;
  /**
   * <code>bool pause_after_capture = 5;</code>
   * @return The pauseAfterCapture.
   */
  @java.lang.Override
  public boolean getPauseAfterCapture() {
    return pauseAfterCapture_;
  }
  /**
   * <code>bool pause_after_capture = 5;</code>
   * @param value The pauseAfterCapture to set.
   */
  private void setPauseAfterCapture(boolean value) {
    
    pauseAfterCapture_ = value;
  }
  /**
   * <code>bool pause_after_capture = 5;</code>
   */
  private void clearPauseAfterCapture() {
    
    pauseAfterCapture_ = false;
  }

  public static final int FIX_ORIENTATION_FIELD_NUMBER = 6;
  private boolean fixOrientation_;
  /**
   * <pre>
   * only used on Android
   * </pre>
   *
   * <code>bool fix_orientation = 6;</code>
   * @return The fixOrientation.
   */
  @java.lang.Override
  public boolean getFixOrientation() {
    return fixOrientation_;
  }
  /**
   * <pre>
   * only used on Android
   * </pre>
   *
   * <code>bool fix_orientation = 6;</code>
   * @param value The fixOrientation to set.
   */
  private void setFixOrientation(boolean value) {
    
    fixOrientation_ = value;
  }
  /**
   * <pre>
   * only used on Android
   * </pre>
   *
   * <code>bool fix_orientation = 6;</code>
   */
  private void clearFixOrientation() {
    
    fixOrientation_ = false;
  }

  public static final int FORCE_UP_ORIENTATION_FIELD_NUMBER = 7;
  private boolean forceUpOrientation_;
  /**
   * <pre>
   * only used on iOS
   * </pre>
   *
   * <code>bool force_up_orientation = 7;</code>
   * @return The forceUpOrientation.
   */
  @java.lang.Override
  public boolean getForceUpOrientation() {
    return forceUpOrientation_;
  }
  /**
   * <pre>
   * only used on iOS
   * </pre>
   *
   * <code>bool force_up_orientation = 7;</code>
   * @param value The forceUpOrientation to set.
   */
  private void setForceUpOrientation(boolean value) {
    
    forceUpOrientation_ = value;
  }
  /**
   * <pre>
   * only used on iOS
   * </pre>
   *
   * <code>bool force_up_orientation = 7;</code>
   */
  private void clearForceUpOrientation() {
    
    forceUpOrientation_ = false;
  }

  public static final int WIDTH_FIELD_NUMBER = 8;
  private int width_;
  /**
   * <code>int32 width = 8;</code>
   * @return The width.
   */
  @java.lang.Override
  public int getWidth() {
    return width_;
  }
  /**
   * <code>int32 width = 8;</code>
   * @param value The width to set.
   */
  private void setWidth(int value) {
    
    width_ = value;
  }
  /**
   * <code>int32 width = 8;</code>
   */
  private void clearWidth() {
    
    width_ = 0;
  }

  public static final int MIRROR_IMAGE_FIELD_NUMBER = 9;
  private boolean mirrorImage_;
  /**
   * <code>bool mirror_image = 9;</code>
   * @return The mirrorImage.
   */
  @java.lang.Override
  public boolean getMirrorImage() {
    return mirrorImage_;
  }
  /**
   * <code>bool mirror_image = 9;</code>
   * @param value The mirrorImage to set.
   */
  private void setMirrorImage(boolean value) {
    
    mirrorImage_ = value;
  }
  /**
   * <code>bool mirror_image = 9;</code>
   */
  private void clearMirrorImage() {
    
    mirrorImage_ = false;
  }

  public static final int DO_NOT_SAVE_FIELD_NUMBER = 10;
  private boolean doNotSave_;
  /**
   * <code>bool do_not_save = 10;</code>
   * @return The doNotSave.
   */
  @java.lang.Override
  public boolean getDoNotSave() {
    return doNotSave_;
  }
  /**
   * <code>bool do_not_save = 10;</code>
   * @param value The doNotSave to set.
   */
  private void setDoNotSave(boolean value) {
    
    doNotSave_ = value;
  }
  /**
   * <code>bool do_not_save = 10;</code>
   */
  private void clearDoNotSave() {
    
    doNotSave_ = false;
  }

  public static final int RETURN_BYTES_FIELD_NUMBER = 11;
  private boolean returnBytes_;
  /**
   * <code>bool return_bytes = 11;</code>
   * @return The returnBytes.
   */
  @java.lang.Override
  public boolean getReturnBytes() {
    return returnBytes_;
  }
  /**
   * <code>bool return_bytes = 11;</code>
   * @param value The returnBytes to set.
   */
  private void setReturnBytes(boolean value) {
    
    returnBytes_ = value;
  }
  /**
   * <code>bool return_bytes = 11;</code>
   */
  private void clearReturnBytes() {
    
    returnBytes_ = false;
  }

  public static final int ORIENTATION_FIELD_NUMBER = 12;
  private int orientation_;
  /**
   * <code>.CameraState.Orientation orientation = 12;</code>
   * @return The enum numeric value on the wire for orientation.
   */
  @java.lang.Override
  public int getOrientationValue() {
    return orientation_;
  }
  /**
   * <code>.CameraState.Orientation orientation = 12;</code>
   * @return The orientation.
   */
  @java.lang.Override
  public eu.long1.nativecamera.proto.CameraState.Orientation getOrientation() {
    eu.long1.nativecamera.proto.CameraState.Orientation result = eu.long1.nativecamera.proto.CameraState.Orientation.forNumber(orientation_);
    return result == null ? eu.long1.nativecamera.proto.CameraState.Orientation.UNRECOGNIZED : result;
  }
  /**
   * <code>.CameraState.Orientation orientation = 12;</code>
   * @param value The enum numeric value on the wire for orientation to set.
   */
  private void setOrientationValue(int value) {
      orientation_ = value;
  }
  /**
   * <code>.CameraState.Orientation orientation = 12;</code>
   * @param value The orientation to set.
   */
  private void setOrientation(eu.long1.nativecamera.proto.CameraState.Orientation value) {
    orientation_ = value.getNumber();
    
  }
  /**
   * <code>.CameraState.Orientation orientation = 12;</code>
   */
  private void clearOrientation() {
    
    orientation_ = 0;
  }

  public static eu.long1.nativecamera.proto.TakePictureRequest parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static eu.long1.nativecamera.proto.TakePictureRequest parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static eu.long1.nativecamera.proto.TakePictureRequest parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static eu.long1.nativecamera.proto.TakePictureRequest parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static eu.long1.nativecamera.proto.TakePictureRequest parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static eu.long1.nativecamera.proto.TakePictureRequest parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static eu.long1.nativecamera.proto.TakePictureRequest parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static eu.long1.nativecamera.proto.TakePictureRequest parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static eu.long1.nativecamera.proto.TakePictureRequest parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }
  public static eu.long1.nativecamera.proto.TakePictureRequest parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static eu.long1.nativecamera.proto.TakePictureRequest parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static eu.long1.nativecamera.proto.TakePictureRequest parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return (Builder) DEFAULT_INSTANCE.createBuilder();
  }
  public static Builder newBuilder(eu.long1.nativecamera.proto.TakePictureRequest prototype) {
    return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
  }

  /**
   * Protobuf type {@code TakePictureRequest}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        eu.long1.nativecamera.proto.TakePictureRequest, Builder> implements
      // @@protoc_insertion_point(builder_implements:TakePictureRequest)
      eu.long1.nativecamera.proto.TakePictureRequestOrBuilder {
    // Construct using eu.long1.nativecamera.proto.TakePictureRequest.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }


    /**
     * <code>string path = 1;</code>
     * @return The path.
     */
    @java.lang.Override
    public java.lang.String getPath() {
      return instance.getPath();
    }
    /**
     * <code>string path = 1;</code>
     * @return The bytes for path.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getPathBytes() {
      return instance.getPathBytes();
    }
    /**
     * <code>string path = 1;</code>
     * @param value The path to set.
     * @return This builder for chaining.
     */
    public Builder setPath(
        java.lang.String value) {
      copyOnWrite();
      instance.setPath(value);
      return this;
    }
    /**
     * <code>string path = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearPath() {
      copyOnWrite();
      instance.clearPath();
      return this;
    }
    /**
     * <code>string path = 1;</code>
     * @param value The bytes for path to set.
     * @return This builder for chaining.
     */
    public Builder setPathBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setPathBytes(value);
      return this;
    }

    @java.lang.Override

    public int getExifCount() {
      return instance.getExifMap().size();
    }
    /**
     * <code>map&lt;string, string&gt; exif = 2;</code>
     */
    @java.lang.Override

    public boolean containsExif(
        java.lang.String key) {
      key.getClass();
      return instance.getExifMap().containsKey(key);
    }

    public Builder clearExif() {
      copyOnWrite();
      instance.getMutableExifMap().clear();
      return this;
    }
    /**
     * <code>map&lt;string, string&gt; exif = 2;</code>
     */

    public Builder removeExif(
        java.lang.String key) {
      key.getClass();
      copyOnWrite();
      instance.getMutableExifMap().remove(key);
      return this;
    }
    /**
     * Use {@link #getExifMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String> getExif() {
      return getExifMap();
    }
    /**
     * <code>map&lt;string, string&gt; exif = 2;</code>
     */
    @java.lang.Override
    public java.util.Map<java.lang.String, java.lang.String> getExifMap() {
      return java.util.Collections.unmodifiableMap(
          instance.getExifMap());
    }
    /**
     * <code>map&lt;string, string&gt; exif = 2;</code>
     */
    @java.lang.Override

    public java.lang.String getExifOrDefault(
        java.lang.String key,
        java.lang.String defaultValue) {
      key.getClass();
      java.util.Map<java.lang.String, java.lang.String> map =
          instance.getExifMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;string, string&gt; exif = 2;</code>
     */
    @java.lang.Override

    public java.lang.String getExifOrThrow(
        java.lang.String key) {
      key.getClass();
      java.util.Map<java.lang.String, java.lang.String> map =
          instance.getExifMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }
    /**
     * <code>map&lt;string, string&gt; exif = 2;</code>
     */
    public Builder putExif(
        java.lang.String key,
        java.lang.String value) {
      key.getClass();
      value.getClass();
      copyOnWrite();
      instance.getMutableExifMap().put(key, value);
      return this;
    }
    /**
     * <code>map&lt;string, string&gt; exif = 2;</code>
     */
    public Builder putAllExif(
        java.util.Map<java.lang.String, java.lang.String> values) {
      copyOnWrite();
      instance.getMutableExifMap().putAll(values);
      return this;
    }

    /**
     * <pre>
     * Should write exif to file
     * </pre>
     *
     * <code>bool write_exif = 3;</code>
     * @return The writeExif.
     */
    @java.lang.Override
    public boolean getWriteExif() {
      return instance.getWriteExif();
    }
    /**
     * <pre>
     * Should write exif to file
     * </pre>
     *
     * <code>bool write_exif = 3;</code>
     * @param value The writeExif to set.
     * @return This builder for chaining.
     */
    public Builder setWriteExif(boolean value) {
      copyOnWrite();
      instance.setWriteExif(value);
      return this;
    }
    /**
     * <pre>
     * Should write exif to file
     * </pre>
     *
     * <code>bool write_exif = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearWriteExif() {
      copyOnWrite();
      instance.clearWriteExif();
      return this;
    }

    /**
     * <pre>
     * Value between 0-1
     * </pre>
     *
     * <code>double quality = 4;</code>
     * @return The quality.
     */
    @java.lang.Override
    public double getQuality() {
      return instance.getQuality();
    }
    /**
     * <pre>
     * Value between 0-1
     * </pre>
     *
     * <code>double quality = 4;</code>
     * @param value The quality to set.
     * @return This builder for chaining.
     */
    public Builder setQuality(double value) {
      copyOnWrite();
      instance.setQuality(value);
      return this;
    }
    /**
     * <pre>
     * Value between 0-1
     * </pre>
     *
     * <code>double quality = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearQuality() {
      copyOnWrite();
      instance.clearQuality();
      return this;
    }

    /**
     * <code>bool pause_after_capture = 5;</code>
     * @return The pauseAfterCapture.
     */
    @java.lang.Override
    public boolean getPauseAfterCapture() {
      return instance.getPauseAfterCapture();
    }
    /**
     * <code>bool pause_after_capture = 5;</code>
     * @param value The pauseAfterCapture to set.
     * @return This builder for chaining.
     */
    public Builder setPauseAfterCapture(boolean value) {
      copyOnWrite();
      instance.setPauseAfterCapture(value);
      return this;
    }
    /**
     * <code>bool pause_after_capture = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearPauseAfterCapture() {
      copyOnWrite();
      instance.clearPauseAfterCapture();
      return this;
    }

    /**
     * <pre>
     * only used on Android
     * </pre>
     *
     * <code>bool fix_orientation = 6;</code>
     * @return The fixOrientation.
     */
    @java.lang.Override
    public boolean getFixOrientation() {
      return instance.getFixOrientation();
    }
    /**
     * <pre>
     * only used on Android
     * </pre>
     *
     * <code>bool fix_orientation = 6;</code>
     * @param value The fixOrientation to set.
     * @return This builder for chaining.
     */
    public Builder setFixOrientation(boolean value) {
      copyOnWrite();
      instance.setFixOrientation(value);
      return this;
    }
    /**
     * <pre>
     * only used on Android
     * </pre>
     *
     * <code>bool fix_orientation = 6;</code>
     * @return This builder for chaining.
     */
    public Builder clearFixOrientation() {
      copyOnWrite();
      instance.clearFixOrientation();
      return this;
    }

    /**
     * <pre>
     * only used on iOS
     * </pre>
     *
     * <code>bool force_up_orientation = 7;</code>
     * @return The forceUpOrientation.
     */
    @java.lang.Override
    public boolean getForceUpOrientation() {
      return instance.getForceUpOrientation();
    }
    /**
     * <pre>
     * only used on iOS
     * </pre>
     *
     * <code>bool force_up_orientation = 7;</code>
     * @param value The forceUpOrientation to set.
     * @return This builder for chaining.
     */
    public Builder setForceUpOrientation(boolean value) {
      copyOnWrite();
      instance.setForceUpOrientation(value);
      return this;
    }
    /**
     * <pre>
     * only used on iOS
     * </pre>
     *
     * <code>bool force_up_orientation = 7;</code>
     * @return This builder for chaining.
     */
    public Builder clearForceUpOrientation() {
      copyOnWrite();
      instance.clearForceUpOrientation();
      return this;
    }

    /**
     * <code>int32 width = 8;</code>
     * @return The width.
     */
    @java.lang.Override
    public int getWidth() {
      return instance.getWidth();
    }
    /**
     * <code>int32 width = 8;</code>
     * @param value The width to set.
     * @return This builder for chaining.
     */
    public Builder setWidth(int value) {
      copyOnWrite();
      instance.setWidth(value);
      return this;
    }
    /**
     * <code>int32 width = 8;</code>
     * @return This builder for chaining.
     */
    public Builder clearWidth() {
      copyOnWrite();
      instance.clearWidth();
      return this;
    }

    /**
     * <code>bool mirror_image = 9;</code>
     * @return The mirrorImage.
     */
    @java.lang.Override
    public boolean getMirrorImage() {
      return instance.getMirrorImage();
    }
    /**
     * <code>bool mirror_image = 9;</code>
     * @param value The mirrorImage to set.
     * @return This builder for chaining.
     */
    public Builder setMirrorImage(boolean value) {
      copyOnWrite();
      instance.setMirrorImage(value);
      return this;
    }
    /**
     * <code>bool mirror_image = 9;</code>
     * @return This builder for chaining.
     */
    public Builder clearMirrorImage() {
      copyOnWrite();
      instance.clearMirrorImage();
      return this;
    }

    /**
     * <code>bool do_not_save = 10;</code>
     * @return The doNotSave.
     */
    @java.lang.Override
    public boolean getDoNotSave() {
      return instance.getDoNotSave();
    }
    /**
     * <code>bool do_not_save = 10;</code>
     * @param value The doNotSave to set.
     * @return This builder for chaining.
     */
    public Builder setDoNotSave(boolean value) {
      copyOnWrite();
      instance.setDoNotSave(value);
      return this;
    }
    /**
     * <code>bool do_not_save = 10;</code>
     * @return This builder for chaining.
     */
    public Builder clearDoNotSave() {
      copyOnWrite();
      instance.clearDoNotSave();
      return this;
    }

    /**
     * <code>bool return_bytes = 11;</code>
     * @return The returnBytes.
     */
    @java.lang.Override
    public boolean getReturnBytes() {
      return instance.getReturnBytes();
    }
    /**
     * <code>bool return_bytes = 11;</code>
     * @param value The returnBytes to set.
     * @return This builder for chaining.
     */
    public Builder setReturnBytes(boolean value) {
      copyOnWrite();
      instance.setReturnBytes(value);
      return this;
    }
    /**
     * <code>bool return_bytes = 11;</code>
     * @return This builder for chaining.
     */
    public Builder clearReturnBytes() {
      copyOnWrite();
      instance.clearReturnBytes();
      return this;
    }

    /**
     * <code>.CameraState.Orientation orientation = 12;</code>
     * @return The enum numeric value on the wire for orientation.
     */
    @java.lang.Override
    public int getOrientationValue() {
      return instance.getOrientationValue();
    }
    /**
     * <code>.CameraState.Orientation orientation = 12;</code>
     * @param value The orientation to set.
     * @return This builder for chaining.
     */
    public Builder setOrientationValue(int value) {
      copyOnWrite();
      instance.setOrientationValue(value);
      return this;
    }
    /**
     * <code>.CameraState.Orientation orientation = 12;</code>
     * @return The orientation.
     */
    @java.lang.Override
    public eu.long1.nativecamera.proto.CameraState.Orientation getOrientation() {
      return instance.getOrientation();
    }
    /**
     * <code>.CameraState.Orientation orientation = 12;</code>
     * @param value The enum numeric value on the wire for orientation to set.
     * @return This builder for chaining.
     */
    public Builder setOrientation(eu.long1.nativecamera.proto.CameraState.Orientation value) {
      copyOnWrite();
      instance.setOrientation(value);
      return this;
    }
    /**
     * <code>.CameraState.Orientation orientation = 12;</code>
     * @return This builder for chaining.
     */
    public Builder clearOrientation() {
      copyOnWrite();
      instance.clearOrientation();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:TakePictureRequest)
  }
  @java.lang.Override
  @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
  protected final java.lang.Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      java.lang.Object arg0, java.lang.Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new eu.long1.nativecamera.proto.TakePictureRequest();
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case BUILD_MESSAGE_INFO: {
          java.lang.Object[] objects = new java.lang.Object[] {
            "path_",
            "exif_",
            ExifDefaultEntryHolder.defaultEntry,
            "writeExif_",
            "quality_",
            "pauseAfterCapture_",
            "fixOrientation_",
            "forceUpOrientation_",
            "width_",
            "mirrorImage_",
            "doNotSave_",
            "returnBytes_",
            "orientation_",
          };
          java.lang.String info =
              "\u0000\f\u0000\u0000\u0001\f\f\u0001\u0000\u0000\u0001\u0208\u00022\u0003\u0007\u0004" +
              "\u0000\u0005\u0007\u0006\u0007\u0007\u0007\b\u0004\t\u0007\n\u0007\u000b\u0007\f" +
              "\f";
          return newMessageInfo(DEFAULT_INSTANCE, info, objects);
      }
      // fall through
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        com.google.protobuf.Parser<eu.long1.nativecamera.proto.TakePictureRequest> parser = PARSER;
        if (parser == null) {
          synchronized (eu.long1.nativecamera.proto.TakePictureRequest.class) {
            parser = PARSER;
            if (parser == null) {
              parser =
                  new DefaultInstanceBasedParser<eu.long1.nativecamera.proto.TakePictureRequest>(
                      DEFAULT_INSTANCE);
              PARSER = parser;
            }
          }
        }
        return parser;
    }
    case GET_MEMOIZED_IS_INITIALIZED: {
      return (byte) 1;
    }
    case SET_MEMOIZED_IS_INITIALIZED: {
      return null;
    }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:TakePictureRequest)
  private static final eu.long1.nativecamera.proto.TakePictureRequest DEFAULT_INSTANCE;
  static {
    TakePictureRequest defaultInstance = new TakePictureRequest();
    // New instances are implicitly immutable so no need to make
    // immutable.
    DEFAULT_INSTANCE = defaultInstance;
    com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
      TakePictureRequest.class, defaultInstance);
  }

  public static eu.long1.nativecamera.proto.TakePictureRequest getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<TakePictureRequest> PARSER;

  public static com.google.protobuf.Parser<TakePictureRequest> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

